<?php

/**
 * Basecompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property string $vat
 * @property bigint $address_id
 * @property address $Address
 * 
 * @method string  getName()        Returns the current record's "name" value
 * @method string  getDescription() Returns the current record's "description" value
 * @method string  getVat()         Returns the current record's "vat" value
 * @method bigint  getAddressId()   Returns the current record's "address_id" value
 * @method address getAddress()     Returns the current record's "Address" value
 * @method company setName()        Sets the current record's "name" value
 * @method company setDescription() Sets the current record's "description" value
 * @method company setVat()         Sets the current record's "vat" value
 * @method company setAddressId()   Sets the current record's "address_id" value
 * @method company setAddress()     Sets the current record's "Address" value
 * 
 * @package    transfer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('vat', 'string', 11, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('address_id', 'bigint', null, array(
             'type' => 'bigint',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('address as Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}